{"version":3,"sources":["../src/peds.js"],"names":["require","request","base","USApplication","Model","USApplicationManager","pageNumber","post","url","body","getQuery","json","response","queryResults","searchResponse","params","limit","getPage","page","numFound","query","qf","facet","sort","start","reducer","accumulator","param","field","searchText","Object","entries","reduce","Manager","objects","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAO,CAAC,iBAAD,CAAP;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;IAEMG,a;;;;;;;;;;;;EAAsBD,IAAI,CAACE,K;;AAAQ;;IAEnCC,oB;;;;;;;;;;;;;;;;;;iEACWF,a;;mEACE,Q;;kEACD,e;;;;;;;;;;+CAEEG,U;;;;;;;uBACSL,OAAO,CAACM,IAAR,CAAa;AAC9BC,kBAAAA,GAAG,EAAE,mCADyB;AAE9BC,kBAAAA,IAAI,EAAE,KAAKC,QAAL,CAAcJ,UAAd,CAFwB;AAG9BK,kBAAAA,IAAI,EAAE;AAHwB,iBAAb,C;;;AAAjBC,gBAAAA,Q;iDAKGA,QAAQ,CAACC,YAAT,CAAsBC,c;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAKzB,KAAKC,MAAL,CAAYC,K;;;;;kDACL,KAAKD,MAAL,CAAYC,K;;;;uBAEN,KAAKC,OAAL,CAAa,CAAb,C;;;AAAbC,gBAAAA,I;kDACGA,IAAI,CAACN,QAAL,CAAcO,Q;;;;;;;;;;;;;;;;;;6BAGhBb,U,EAAY;AACjB,UAAIc,KAAK,GAAG;AACRC,QAAAA,EAAE,EAAC,2WADK;AAERC,QAAAA,KAAK,EAAC,OAFE;AAGRC,QAAAA,IAAI,EAAC,YAHG;AAIRC,QAAAA,KAAK,EAAElB,UAAU,GAAG;AAJZ,OAAZ;;AAMA,eAASmB,OAAT,CAAiBC,WAAjB,EAA8BC,KAA9B,EAAqC;AAAA,oCACZA,KADY;AAAA,YAC5BC,KAD4B;AAAA,YACrBR,KADqB;;AAEjC,YAAIQ,KAAK,IAAI,OAAb,EAAsB;AAClB,iBAAOF,WAAP;AACH,SAFD,MAEO;AACH,iBAAOA,WAAW,aAAME,KAAN,eAAgBR,KAAhB,OAAlB;AACH;AACJ;;AACDA,MAAAA,KAAK,CAACS,UAAN,GAAmBC,MAAM,CAACC,OAAP,CAAe,KAAKhB,MAApB,EAA4BiB,MAA5B,CAAmCP,OAAnC,EAA4C,EAA5C,CAAnB;AACA,aAAOL,KAAP;AACH;;;;EAxC8BlB,IAAI,CAAC+B,O;;AAyCvC;AAED9B,aAAa,CAAC+B,OAAd,GAAwB,IAAI7B,oBAAJ,CAAyB,EAAzB,CAAxB;AAEA8B,MAAM,CAACC,OAAP,GAAiB;AACbjC,EAAAA,aAAa,EAAEA;AADF,CAAjB","sourcesContent":["require(\"@babel/polyfill\");\nconst request = require('request-promise-native');\nconst base = require('./base')\n\nclass USApplication extends base.Model {};\n\nclass USApplicationManager extends base.Manager {\n    modelClass = USApplication\n    defaultQuery = \"applId\"\n    docLocation = \"response.docs\"\n\n    async fetchPage(pageNumber) {\n        let response = await request.post({\n            url: \"https://ped.uspto.gov/api/queries\",\n            body: this.getQuery(pageNumber),\n            json: true,\n        })\n        return response.queryResults.searchResponse\n        \n    }\n\n    async length(){\n        if (this.params.limit) {\n            return this.params.limit\n        }\n        let page = await this.getPage(0)\n        return page.response.numFound\n    }\n\n    getQuery(pageNumber) {\n        let query = {\n            qf:\"appEarlyPubNumber applId appLocation appType appStatus_txt appConfrNumber appCustNumber appGrpArtNumber appCls appSubCls appEntityStatus_txt patentNumber patentTitle primaryInventor firstNamedApplicant appExamName appExamPrefrdName appAttrDockNumber appPCTNumber appIntlPubNumber wipoEarlyPubNumber pctAppType firstInventorFile appClsSubCls rankAndInventorsList\",\n            facet:\"false\",\n            sort:\"applId asc\",\n            start: pageNumber * 20,\n        }\n        function reducer(accumulator, param) {\n            let [field, query] = param\n            if (field == \"limit\") {\n                return accumulator\n            } else {\n                return accumulator + `${field}:(${query}) `\n            }\n        }\n        query.searchText = Object.entries(this.params).reduce(reducer, \"\")\n        return query\n    }\n};\n\nUSApplication.objects = new USApplicationManager({});\n\nmodule.exports = {\n    USApplication: USApplication\n}"],"file":"peds.js"}