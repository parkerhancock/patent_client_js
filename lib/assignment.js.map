{"version":3,"sources":["../src/assignment.js"],"names":["require","request","base","Assignment","Model","AssignmentManager","xml_str","parser","DOMParser","xml_obj","parseFromString","docs","Array","from","getElementsByTagName","map","parseDoc","length","parseInt","getAttribute","doc","childNodes","values","reduce","obj","node","parseChild","nodeName","Date","textContent","pageNumber","get","url","qs","start","rows","facet","params","strictSSL","response","page","objectFromXml","limit","getPage","Manager","objects","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAO,CAAC,iBAAD,CAAP;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;IAEMG,U;;;;;;;;;;;;EAAmBD,IAAI,CAACE,K;;AAAQ;;IAEhCC,iB;;;;;;;;;;;;;;;;;;mEACa,mB;;kEACD,M;;iEACDF,U;;oEAqBG,UAACG,OAAD,EAAa;AACzB,UAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,UAAIC,OAAO,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,OAAvB,EAAgC,iBAAhC,CAAd;AACA,UAAIK,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWJ,OAAO,CAACK,oBAAR,CAA6B,KAA7B,CAAX,EAAgDC,GAAhD,CAAoD,MAAKC,QAAzD,CAAX;AACA,UAAIC,MAAM,GAAGC,QAAQ,CAACT,OAAO,CAACK,oBAAR,CAA6B,QAA7B,EAAuC,CAAvC,EAA0CK,YAA1C,CAAuD,UAAvD,CAAD,EAAqE,EAArE,CAArB;AACA,aAAO;AACHF,QAAAA,MAAM,EAAEA,MADL;AAEHN,QAAAA,IAAI,EAAEA;AAFH,OAAP;AAIH,K;;+DAEU,UAACS,GAAD,EAAS;AAChB,aAAOR,KAAK,CAACC,IAAN,CAAWO,GAAG,CAACC,UAAJ,CAAeC,MAAf,EAAX,EACFC,MADE,CACK,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnBD,QAAAA,GAAG,CAACC,IAAI,CAACN,YAAL,CAAkB,MAAlB,CAAD,CAAH,GAAiC,MAAKO,UAAL,CAAgBD,IAAhB,CAAjC;AACA,eAAOD,GAAP;AACH,OAJE,EAIA,EAJA,CAAP;AAKH,K;;iEAEY,UAACC,IAAD,EAAU;AACnB,cAAQA,IAAI,CAACE,QAAb;AACI,aAAK,KAAL;AACI,iBAAOf,KAAK,CAACC,IAAN,CAAWY,IAAI,CAACJ,UAAL,CAAgBC,MAAhB,EAAX,EAAqCP,GAArC,CAAyC,UAAAU,IAAI;AAAA,mBAAI,MAAKC,UAAL,CAAgBD,IAAhB,CAAJ;AAAA,WAA7C,CAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,IAAIG,IAAJ,CAASH,IAAI,CAACI,WAAd,CAAP;;AACJ;AACI,iBAAOJ,IAAI,CAACI,WAAZ;AANR;AAQH,K;;;;;;;;;;+CA/CeC,U;;;;;;;uBACS7B,OAAO,CAAC8B,GAAR,CAAY;AAC7BC,kBAAAA,GAAG,EAAE,wDADwB;AAE7BC,kBAAAA,EAAE,oBAAM;AAACC,oBAAAA,KAAK,EAAEJ,UAAU,GAAG,EAArB;AAAyBK,oBAAAA,IAAI,EAAE,EAA/B;AAAmCC,oBAAAA,KAAK,EAAE;AAA1C,mBAAN,EAA2D,KAAKC,MAAhE,CAF2B;AAG7BC,kBAAAA,SAAS,EAAE;AAHkB,iBAAZ,C;;;AAAjBC,gBAAAA,Q;AAMAC,gBAAAA,I,GAAO,KAAKC,aAAL,CAAmBF,QAAnB,C;iDACJC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIH,KAAKH,MAAL,CAAYK,K;;;;;kDACL,KAAKL,MAAL,CAAYK,K;;;;uBAEN,KAAKC,OAAL,CAAa,CAAb,C;;;AAAbH,gBAAAA,I;kDACGA,IAAI,CAACvB,M;;;;;;;;;;;;;;;;;;;EArBYf,IAAI,CAAC0C,O;;AAqDpC;AAEDzC,UAAU,CAAC0C,OAAX,GAAqB,IAAIxC,iBAAJ,CAAsB,EAAtB,CAArB;AAEAyC,MAAM,CAACC,OAAP,GAAiB;AACb5C,EAAAA,UAAU,EAAEA;AADC,CAAjB","sourcesContent":["require(\"@babel/polyfill\");\nconst request = require('request-promise-native');\nconst base = require('./base')\n\nclass Assignment extends base.Model {};\n\nclass AssignmentManager extends base.Manager {\n    defaultQuery = \"applicationNumber\"\n    docLocation = \"docs\"\n    modelClass = Assignment\n\n    async fetchPage(pageNumber) {\n        let response = await request.get({\n            url: \"https://assignment-api.uspto.gov/patent/advancedSearch\",\n            qs: {...{start: pageNumber * 20, rows: 20, facet: false}, ...this.params},\n            strictSSL: false\n        })\n\n        let page = this.objectFromXml(response)\n        return page\n    }\n\n    async length() {\n        if (this.params.limit) {\n            return this.params.limit\n        }\n        let page = await this.getPage(0)\n        return page.length\n    }\n\n    objectFromXml = (xml_str) => {\n        let parser = new DOMParser()\n        let xml_obj = parser.parseFromString(xml_str, \"application/xml\")\n        let docs = Array.from(xml_obj.getElementsByTagName(\"doc\")).map(this.parseDoc);\n        let length = parseInt(xml_obj.getElementsByTagName(\"result\")[0].getAttribute(\"numFound\"), 10)\n        return {\n            length: length,\n            docs: docs,\n        }\n    }\n\n    parseDoc = (doc) => {\n        return Array.from(doc.childNodes.values())\n            .reduce((obj, node) => {\n                obj[node.getAttribute(\"name\")] = this.parseChild(node); \n                return obj\n            }, {})\n    }\n\n    parseChild = (node) => {\n        switch (node.nodeName) {\n            case \"arr\":\n                return Array.from(node.childNodes.values()).map(node => this.parseChild(node));\n            case \"date\":\n                return new Date(node.textContent);\n            default:\n                return node.textContent;\n        }\n    }\n};\n\nAssignment.objects = new AssignmentManager({})\n\nmodule.exports = {\n    Assignment: Assignment,\n}"],"file":"assignment.js"}